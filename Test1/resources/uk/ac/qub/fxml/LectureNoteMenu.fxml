<?xml version="1.0" encoding="UTF-8"?>
<!-- importing necessary Java, JavaFX and JFoenix classes for FXML file -->
<?import javafx.scene.shape.*?>
<?import com.jfoenix.controls.*?>
<?import javafx.scene.text.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.*?>
<?import java.lang.*?>
<?import javafx.scene.layout.*?>

<!-- The below AnchorPane will consist of all the subsequent JFXButtons, Labels, JFXComboBox and JFXListView that will appear on screen
The fx:controller is used to reference the NoteLecturerController.java controller class that will manipulate the FXML objects -->
<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="800.0" prefWidth="1375.0" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="application.NoteLectureController">
   <children>
      <!-- Creating Rectangle to hold buttons and JFXTextFields -->
      <Rectangle arcHeight="20.0" arcWidth="20.0" fill="#76001b" height="368.0" layoutX="85.0" layoutY="218.0" stroke="WHITE" strokeType="INSIDE" strokeWidth="5.0" width="1094.0" />
      <!-- Creating the JFXTextField for Week, with fx:id to allow the controller class to call 
      the getText method to retrieve the week details entered by the user-->
      <JFXTextField fx:id="Week" focusColor="WHITE" layoutX="267.0" layoutY="244.0" prefHeight="33.0" prefWidth="185.0" promptText="Enter Week Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextField>
      <!-- Creating the Week and Date labels -->
      <Label layoutX="203.0" layoutY="249.0" text="Week:" />
      <Label layoutX="209.0" layoutY="319.0" text="Date:" />
      <!-- Creating the JFXTextField for Start Time, with fx:id to allow the controller class to call 
      the getText method to retrieve the start time entered by the user-->
      <JFXTextField fx:id="StartTime" focusColor="WHITE" layoutX="262.0" layoutY="374.0" prefHeight="33.0" prefWidth="185.0" promptText="Enter Start Time Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextField>
      <!-- Creating the labels for Start Time and Year -->
      <Label layoutX="169.0" layoutY="379.0" text="Start Time:" />
      <Label layoutX="554.0" layoutY="369.0" text="Year:" />
      <!-- Creating the JFXTextField for Module, with fx:id to allow the controller class to call 
      the getText method to retrieve the module entered by the user-->
      <JFXTextField fx:id="Module" focusColor="WHITE" layoutX="607.0" layoutY="314.0" prefHeight="33.0" prefWidth="168.0" promptText="Enter Module Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextField>
      <!-- Creating the labels for Module and Staff -->
      <Label layoutX="531.0" layoutY="309.0" text="Module:" />
      <Label layoutX="554.0" layoutY="239.0" text="Staff:" />
      <!-- Creating the JFXTextField for Staff, with fx:id to allow the controller class to call 
      the getText method to retrieve the nakme of the staff member entered by the user-->
      <JFXTextField fx:id="Staff" focusColor="WHITE" layoutX="607.0" layoutY="244.0" prefHeight="33.0" prefWidth="168.0" promptText="Enter Staff Name Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextField>
      <!-- Creating the JFXButton for Return to Notes Menu and Return to Notes Menu, each with an 
      onAction identifier that will be associated with the respective java methods in the controller class -->
      <JFXButton layoutX="617.0" layoutY="602.0" onAction="#ReturnNotesMenu" text="Return to Notes Menu" />
      <JFXButton layoutX="920.0" layoutY="602.0" onAction="#ReturnMainMenu" text="Return to Main Menu" />
      <!-- Creating the JFXList for TableLectures, that will populate with lectures once a search button
      has been clicked -->
      <JFXListView fx:id="TableLectures" layoutX="119.0" layoutY="437.0" onMouseClicked="#TableClick" prefHeight="126.0" prefWidth="1026.0" />
      <!-- Creating the JFXTextArea for Notes, with fx:id to allow the controller class
      to call the getText method to retrieve the note details entered by the user -->
      <JFXTextArea fx:id="Note" focusColor="WHITE" layoutX="851.0" layoutY="244.0" prefHeight="165.0" prefWidth="266.0" promptText="Enter Note Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextArea>
      <!-- Creating the JFXButton for Uploading Note, with an onAction identifier that will be 
      associated with the upload note java method in the controller class -->
      <JFXButton layoutX="398.0" layoutY="602.0" onAction="#Upload" text="Upload Note" />
      <!-- creating a label for the lecture that is selected, displaying the lecture details -->
      <Label fx:id="SelectedLecture" layoutX="308.0" layoutY="169.0" prefHeight="33.0" prefWidth="837.0" />
      <!-- Creating the JFXButton for Search, with an onAction identifier that will be 
      associated with the search java method in the controller class -->
      <JFXButton layoutX="189.0" layoutY="602.0" onAction="#Search" text="Search" />
      <!-- Creating the DatePicker for Lecture Date, with fx:id to allow the controller class
      to call the getValue method to retrieve the lecture date selected by the user -->
      <DatePicker fx:id="LectureDate" layoutX="264.0" layoutY="309.0" prefHeight="25.0" prefWidth="185.0" promptText="Select Date" />
      <!-- creating the JFXComboBoxe for Year, with fx:id to allow the controller class
      to call the getValue method to retrieve the year selected by the user. The values of the 
      JFXComboBox will be set in the initialise method in the controller class -->
      <JFXComboBox fx:id="Year" focusColor="WHITE" layoutX="607.0" layoutY="369.0" prefHeight="39.0" prefWidth="168.0" promptText="Select Year" unFocusColor="WHITE" />
      <!-- Creating the sub menu header for the page, with text explaining how to navigate the screen -->
      <Label layoutX="400.0" layoutY="115.0" prefHeight="27.0" prefWidth="901.0" text="Search for a lecture below, and click 'Upload Note' to add the note to the database." />
      <!-- The below label is the Console header. It will be positioned at 400 on the X axis and 75 on the Y axis to 
   	  maintain a static feel throughout the console -->
      <Label layoutX="400.0" layoutY="75.0" text="Medical Hub Administration Console" />
      <!-- The below ImageView will act as a placeholder for the QUB logo to be populated in the initialise() method in the controller class -->
      <ImageView fx:id="Image" fitHeight="114.0" fitWidth="406.0" layoutX="45.0" layoutY="65.0" pickOnBounds="true" preserveRatio="true" />
      <Label layoutX="226.0" layoutY="176.0" text="Lecture:" />
   </children>
</AnchorPane>
