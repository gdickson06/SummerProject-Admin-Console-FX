<?xml version="1.0" encoding="UTF-8"?>
<!-- importing necessary Java, JavaFX and JFoenix classes for FXML file -->
<?import com.jfoenix.controls.*?>
<?import javafx.scene.text.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.*?>
<?import java.lang.*?>
<?import javafx.scene.layout.*?>

<!-- The below AnchorPane will consist of all the subsequent JFXButtons, Labels, JFXComboBox and JFXListView that will appear on screen
The fx:controller is used to reference the StaffAmendDeleteController.java controller class that will manipulate the FXML objects -->
<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="800.0" prefWidth="1375.0" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="application.StaffAmendDeleteController">
   <children>
   	  <!-- Creating the JFXComboBox for Access Level, with a fx:id that will allow the controller class
   	  to use the getValue method to retrieve the staff member's access level from the JFXComboBox -->
      <JFXComboBox fx:id="accessLevel" focusColor="WHITE" layoutX="397.0" layoutY="301.0" prefHeight="39.0" prefWidth="432.0" promptText="Select Access Level" unFocusColor="WHITE" />
      <!-- Creating the label for Access Level that will be positioned adjacent to the Access Level JFXComboBox -->
      <Label layoutX="254.0" layoutY="309.0" text="Access Level:" />
      <!-- Creating the JFXTextField for Staff Number, with a fx:id that will allow the controller class
   	  to use the getText method to retrieve the staff member's staff number from the JFXTextField -->
      <JFXTextField fx:id="staffNumber" focusColor="WHITE" labelFloat="true" layoutX="397.0" layoutY="188.0" prefHeight="33.0" prefWidth="432.0" promptText="Enter Staff Number Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextField>
      <!-- Creating the labels for Staff Number and Name to be positioned adjacent to their respective
      JFXTextFields -->
      <Label layoutX="244.0" layoutY="191.0" text="Staff Number:" />
      <Label layoutX="308.0" layoutY="248.0" text="Name:" />
      <!-- Creating the JFXTextField for Name, with a fx:id that will allow the controller class
   	  to use the getText method to retrieve the staff member's name from the JFXTextField -->
      <JFXTextField fx:id="name" focusColor="WHITE" labelFloat="true" layoutX="397.0" layoutY="248.0" prefHeight="33.0" prefWidth="432.0" promptText="Enter Name Here" unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextField>
      <!-- Creating the JFXButtons for Name Search, Staff Number Search and Access Level Search, 
      each with an onAction identifier that will be used to reference each button's associated
      Java method in the controller class -->
      <JFXButton layoutX="873.0" layoutY="242.0" onAction="#nameSearch" text="Search" />
      <JFXButton layoutX="873.0" layoutY="187.0" onAction="#staffNumberSearch" text="Search" />
      <JFXButton layoutX="873.0" layoutY="301.0" onAction="#accessLevelSearch" text="Search" />
      <!-- Creating the JFXButtons for Return to Main Menu and Return to Staff Menu, 
      each with an onAction identifier that will be used to reference each button's associated
      Java method in the controller class -->
      <JFXButton layoutX="635.0" layoutY="573.0" onAction="#home" text="Return to Main Menu" />
      <JFXButton layoutX="375.0" layoutY="574.0" onAction="#returnStaffScreen" text="Return to Staff Screen" />
      <!-- Creating the userTable JFXListView that will populate all of the staff members
      based on the values searched by the user. The onMouseClicked identifier will be linked
      with an associated Java method in the controller class that will allow the user to amend
      or delete the selected staff member -->
      <JFXListView fx:id="userTable" layoutX="88.0" layoutY="369.0" onMouseClicked="#ListClick" prefHeight="174.0" prefWidth="1046.0" />
      <!-- The below ImageView will act as a placeholder for the QUB logo to be populated in the initialise() method in the controller class -->
      <ImageView fx:id="Image" fitHeight="114.0" fitWidth="406.0" layoutX="45.0" layoutY="65.0" pickOnBounds="true" preserveRatio="true" />
      <!-- The below label is the Console header. It will be positioned at 400 on the X axis and 75 on the Y axis to 
   	  maintain a static feel throughout the console -->
      <Label layoutX="400.0" layoutY="75.0" text="Medical Hub Administration Console" />
      <!-- Creating the sub menu header for the page, with text explaining how to navigate the screen -->
      <Label layoutX="400.0" layoutY="125.0" prefHeight="27.0" prefWidth="908.0" text="Search for a staff member to amend or delete using the search or combo-search buttons" />
   </children>
</AnchorPane>
