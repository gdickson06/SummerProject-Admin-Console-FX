<?xml version="1.0" encoding="UTF-8"?>
<!-- importing necessary Java, JavaFX and JFoenix classes for FXML file -->
<?import javafx.scene.shape.*?>
<?import com.jfoenix.controls.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.*?>
<?import javafx.scene.text.*?>
<?import java.lang.*?>
<?import javafx.scene.layout.*?>

<!-- The below AnchorPane will consist of all the subsequent JFXButtons, Labels, JFXComboBox and JFXListView that will appear on screen
The fx:controller is used to reference the GeneralNotesController.java controller class that will manipulate the FXML objects -->
<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="800.0" prefWidth="1375.0" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="application.GeneralNotesController">
   <children>
      <!-- creating rectangles to hold the 'Amend and Delete Notes' and 'Upload New General Notes' sections -->
      <Rectangle arcHeight="20.0" arcWidth="20.0" fill="#76001b" height="226.0" layoutX="138.0" layoutY="189.0" stroke="WHITE" strokeType="INSIDE" strokeWidth="5.0" width="1100.0" />
      <Rectangle arcHeight="20.0" arcWidth="20.0" fill="#76001b" height="211.0" layoutX="138.0" layoutY="429.0" stroke="WHITE" strokeType="INSIDE" strokeWidth="5.0" width="843.0" />
      <!-- Creating the delete and amend notes buttons with onAction identifiers to link them with
      their associated java methods in the controller class -->
      <JFXButton layoutX="1095.0" layoutY="346.0" onAction="#Delete" text="Delete" />
      <JFXButton layoutX="1070.0" layoutY="290.0" onAction="#Amend" text="Amend Note" />
      <!-- Creating the JFXTextArea for New Notes Details, with fx:id to allow the controller class
      to call the getText method to retrieve the new note details entered by the user -->
      <JFXTextArea fx:id="NewNoteDetails" focusColor="WHITE" layoutX="515.0" layoutY="498.0" prefHeight="114.0" prefWidth="266.0" promptText="Enter Note Details Here..." unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextArea>
      <!-- Creating the button to return the user to the main menu -->
      <JFXButton layoutX="1026.0" layoutY="546.0" onAction="#ReturnMainMenu" text="Return to Main Menu" />
      <!-- creating the labels for Add New Note to Database and Year. Year is to be positioned adjacent to
      the Year JFXComboBox  -->
      <Label layoutX="173.0" layoutY="440.0" text="Add New Note to Database" />
      <Label layoutX="173.0" layoutY="279.0" text="Year:" textFill="WHITE" />
      <!-- Creating the DatePicker for Start Date, with fx:id so that the controller class can call the
      getValue method to retrieve the start date selected by the user -->
      <DatePicker fx:id="Date" layoutX="240.0" layoutY="339.0" prefHeight="39.0" prefWidth="187.0" promptText="Select Date" />
      <!-- creating the label for Note Details -->
      <Label layoutX="561.0" layoutY="202.0" text="Note Details:" />
      <!-- Creating the JFXTextArea for Notes Details, with fx:id to allow the controller class
      to call the getText method to retrieve the note details entered by the user to replace the note details
      on an existing note -->
      <JFXTextArea fx:id="NoteDetails" focusColor="WHITE" layoutX="498.0" layoutY="247.0" prefHeight="135.0" prefWidth="229.0" promptText="Enter Note Details Here." unFocusColor="WHITE">
         <font>
            <Font size="16.0" />
         </font>
      </JFXTextArea>
      <!-- Creating the NoteList JFXListView that will allow the user to see upcoming notes -->
      <JFXListView fx:id="NoteList" layoutX="780.0" layoutY="247.0" onMouseClicked="#SelectNote" prefHeight="141.0" prefWidth="255.0" />
      <!-- Creating the labels for Upcoming Notes and Note Details -->
      <Label layoutX="838.0" layoutY="202.0" text="Upcoming Notes:" />
      <Label layoutX="583.0" layoutY="440.0" text="Note Details:" />
      <!-- Creating the DatePicker for New Note Date, with fx:id so that the controller class can call the
      getValue method to retrieve the new start date for the amended note, as selected by the user -->
      <DatePicker fx:id="NewNoteDate" layoutX="240.0" layoutY="565.0" prefHeight="39.0" prefWidth="187.0" promptText="Select Date" />
      <!-- Creating the labels for Year and Date -->
      <Label layoutX="173.0" layoutY="500.0" text="Year:" />
      <Label layoutX="173.0" layoutY="581.0" text="Date:" />
      <!-- Creating the JFXButton for Save New Note, with an onAction identifier that will be associated
      with the save new note java method in the controller class -->
      <JFXButton layoutX="827.0" layoutY="578.0" onAction="#SaveNewNote" text="Save Note" />
      <!-- Creating the label for Date -->
      <Label layoutX="173.0" layoutY="355.0" text="Date:" textFill="WHITE" />
      <Label layoutX="173.0" layoutY="581.0" text="Date:" />
      <!-- Creating the JFXButton for Return to Notes Menu, with an onAction identifier that will be associated
      with the return to note menu java method in the controller class -->
      <JFXButton layoutX="1023.0" layoutY="472.0" onAction="#ReturnNotesMenu" text="Return to Notes Menu" />
      <!-- creating the JFXComboBoxes for Year and New Note Year, with fx:id to allow the controller class
      to call the getValue method to retrieve the note values inpuuted by the user. The values of the 
      JFXComboBoxes will be set in the initialise method in the controller class -->
      <JFXComboBox fx:id="Year" focusColor="WHITE" labelFloat="true" layoutX="240.0" layoutY="263.0" prefHeight="39.0" prefWidth="187.0" promptText="Select Year" unFocusColor="WHITE" />
      <JFXComboBox fx:id="NewNoteYear" focusColor="WHITE" labelFloat="true" layoutX="240.0" layoutY="485.0" prefHeight="39.0" prefWidth="187.0" promptText="Select Year" unFocusColor="WHITE" />
      <!-- Creating the labels for Search and Amend Existing Note-->
      <Label layoutX="173.0" layoutY="202.0" text="Search and Amend Existing Notes" textFill="WHITE" />
      <!-- Creating the sub menu header for the page, with text explaining how to navigate the screen -->
      <Label layoutX="400.0" layoutY="125.0" prefHeight="27.0" prefWidth="901.0" text="Search for upcoming notes, add notes, and delete notes from the database." />
      <!-- The below label is the Console header. It will be positioned at 400 on the X axis and 75 on the Y axis to 
   	  maintain a static feel throughout the console -->
      <Label layoutX="400.0" layoutY="75.0" text="Medical Hub Administration Console" />
      <!-- The below ImageView will act as a placeholder for the QUB logo to be populated in the initialise() method in the controller class -->
      <ImageView fx:id="Image" fitHeight="114.0" fitWidth="406.0" layoutX="45.0" layoutY="65.0" pickOnBounds="true" preserveRatio="true" />
   </children>
</AnchorPane>
